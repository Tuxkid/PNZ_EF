get100mort <- function(xx, max.control = TRUE)
{
### Purpose:- Finds the first consistent 100% mortality point
### ----------------------------------------------------------------------
### Modified from:- 
### ----------------------------------------------------------------------
### Arguments:- xx: dataframe that can be read by a glean-type function
###             max.control: use only greater of handling and CO2 control?
### ----------------------------------------------------------------------
### Author:-   Patrick Connolly, Date:- 17 Sep 2015, 09:56
### ----------------------------------------------------------------------
### Revisions:-

  require(dplyr)
  if(max.control){ # which control mortality is greater?
    xx <- within(xx, Mort <- dead/Total)
    xx <- within(xx, Row <- seq(nrow(xx)))
    cont.df <- xx[xx$Efpc == 0,]
    smallest <- function(x){
      biff <- logical(length(x)) # sometimes only 1 which will be also a min
      if(length(x) > 1){
        xmin <- min(x, na.rm = TRUE)
        wx <- which(x == xmin)
        wx <- wx[1] # necessary for ties: want only one
        biff[wx] <- TRUE
      }
      biff
    }
    cont.df$Smaller <- unlist(with(cont.df, tapply(Mort, Ndx, smallest)))
    ignore.rows <- with(cont.df, Row[Smaller])
    ## rearrange if more than one lot is done for the same combination
    xx <- xx[!xx$Row %in% ignore.rows, ] %>%
      arrange(SLS, Fruit, Temperature, Duration, Rep, Efpc, HC) %>%
        select(SLS, Fruit, Temperature, Duration, Rep, Efpc, dead, Total)
  } 

  browser()

  
  
}
